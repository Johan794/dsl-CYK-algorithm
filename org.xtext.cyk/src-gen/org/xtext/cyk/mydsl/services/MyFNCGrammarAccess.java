/*
 * generated by Xtext 2.27.0-SNAPSHOT
 */
package org.xtext.cyk.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyFNCGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class GNFCElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.cyk.mydsl.MyFNC.GNFC");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInitAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cInitInitialParserRuleCall_0_0 = (RuleCall)cInitAssignment_0.eContents().get(0);
		private final Assignment cProductionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cProductionsProductionParserRuleCall_1_0 = (RuleCall)cProductionsAssignment_1.eContents().get(0);
		private final Assignment cFinalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFinalInputStringParserRuleCall_2_0 = (RuleCall)cFinalAssignment_2.eContents().get(0);
		
		//GNFC:
		//    init = Initial productions+=Production* final = InputString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//init = Initial productions+=Production* final = InputString
		public Group getGroup() { return cGroup; }
		
		//init = Initial
		public Assignment getInitAssignment_0() { return cInitAssignment_0; }
		
		//Initial
		public RuleCall getInitInitialParserRuleCall_0_0() { return cInitInitialParserRuleCall_0_0; }
		
		//productions+=Production*
		public Assignment getProductionsAssignment_1() { return cProductionsAssignment_1; }
		
		//Production
		public RuleCall getProductionsProductionParserRuleCall_1_0() { return cProductionsProductionParserRuleCall_1_0; }
		
		//final = InputString
		public Assignment getFinalAssignment_2() { return cFinalAssignment_2; }
		
		//InputString
		public RuleCall getFinalInputStringParserRuleCall_2_0() { return cFinalInputStringParserRuleCall_2_0; }
	}
	public class InitialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.cyk.mydsl.MyFNC.Initial");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLeftAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cLeftSKeyword_0_0 = (Keyword)cLeftAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRigthAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRigthLambdaParserRuleCall_2_0 = (RuleCall)cRigthAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cVerticalLineKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRigthAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRigthRigthParserRuleCall_3_1_0 = (RuleCall)cRigthAssignment_3_1.eContents().get(0);
		
		//Initial:
		//    left= 'S' '->' rigth+=(Lambda)('|' + rigth+=Rigth)*;
		@Override public ParserRule getRule() { return rule; }
		
		//left= 'S' '->' rigth+=(Lambda)('|' + rigth+=Rigth)*
		public Group getGroup() { return cGroup; }
		
		//left= 'S'
		public Assignment getLeftAssignment_0() { return cLeftAssignment_0; }
		
		//'S'
		public Keyword getLeftSKeyword_0_0() { return cLeftSKeyword_0_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }
		
		//rigth+=(Lambda)
		public Assignment getRigthAssignment_2() { return cRigthAssignment_2; }
		
		//(Lambda)
		public RuleCall getRigthLambdaParserRuleCall_2_0() { return cRigthLambdaParserRuleCall_2_0; }
		
		//('|' + rigth+=Rigth)*
		public Group getGroup_3() { return cGroup_3; }
		
		//'|' +
		public Keyword getVerticalLineKeyword_3_0() { return cVerticalLineKeyword_3_0; }
		
		//rigth+=Rigth
		public Assignment getRigthAssignment_3_1() { return cRigthAssignment_3_1; }
		
		//Rigth
		public RuleCall getRigthRigthParserRuleCall_3_1_0() { return cRigthRigthParserRuleCall_3_1_0; }
	}
	public class LambdaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.cyk.mydsl.MyFNC.Lambda");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cRigthAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cRigth_Keyword_0_0 = (Keyword)cRigthAssignment_0.eContents().get(0);
		private final RuleCall cRigthParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Lambda:
		//    rigth= '_' | Rigth
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//rigth= '_' | Rigth
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//rigth= '_'
		public Assignment getRigthAssignment_0() { return cRigthAssignment_0; }
		
		//'_'
		public Keyword getRigth_Keyword_0_0() { return cRigth_Keyword_0_0; }
		
		//Rigth
		public RuleCall getRigthParserRuleCall_1() { return cRigthParserRuleCall_1; }
	}
	public class ProductionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.cyk.mydsl.MyFNC.Production");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLeftAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLeftNonTerminalParserRuleCall_0_0 = (RuleCall)cLeftAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRigthAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRigthRigthParserRuleCall_2_0 = (RuleCall)cRigthAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cVerticalLineKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRigthAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRigthRigthParserRuleCall_3_1_0 = (RuleCall)cRigthAssignment_3_1.eContents().get(0);
		
		//Production:
		//    left=NonTerminal '->' rigth+=(Rigth)('|' + rigth+=Rigth)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//left=NonTerminal '->' rigth+=(Rigth)('|' + rigth+=Rigth)*
		public Group getGroup() { return cGroup; }
		
		//left=NonTerminal
		public Assignment getLeftAssignment_0() { return cLeftAssignment_0; }
		
		//NonTerminal
		public RuleCall getLeftNonTerminalParserRuleCall_0_0() { return cLeftNonTerminalParserRuleCall_0_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }
		
		//rigth+=(Rigth)
		public Assignment getRigthAssignment_2() { return cRigthAssignment_2; }
		
		//(Rigth)
		public RuleCall getRigthRigthParserRuleCall_2_0() { return cRigthRigthParserRuleCall_2_0; }
		
		//('|' + rigth+=Rigth)*
		public Group getGroup_3() { return cGroup_3; }
		
		//'|' +
		public Keyword getVerticalLineKeyword_3_0() { return cVerticalLineKeyword_3_0; }
		
		//rigth+=Rigth
		public Assignment getRigthAssignment_3_1() { return cRigthAssignment_3_1; }
		
		//Rigth
		public RuleCall getRigthRigthParserRuleCall_3_1_0() { return cRigthRigthParserRuleCall_3_1_0; }
	}
	public class RigthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.cyk.mydsl.MyFNC.Rigth");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBinaryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Rigth:
		//    Simple | Binary
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Simple | Binary
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Simple
		public RuleCall getSimpleParserRuleCall_0() { return cSimpleParserRuleCall_0; }
		
		//Binary
		public RuleCall getBinaryParserRuleCall_1() { return cBinaryParserRuleCall_1; }
	}
	public class SimpleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.cyk.mydsl.MyFNC.Simple");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cAlphaAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cAlphaAKeyword_0_0 = (Keyword)cAlphaAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cSimpleAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cBKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cSimpleAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cCKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cSimpleAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Keyword cDKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cSimpleAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cSimpleAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final Keyword cFKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Action cSimpleAction_6_0 = (Action)cGroup_6.eContents().get(0);
		private final Keyword cGKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Action cSimpleAction_7_0 = (Action)cGroup_7.eContents().get(0);
		private final Keyword cHKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Action cSimpleAction_8_0 = (Action)cGroup_8.eContents().get(0);
		private final Keyword cIKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Action cSimpleAction_9_0 = (Action)cGroup_9.eContents().get(0);
		private final Keyword cJKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Action cSimpleAction_10_0 = (Action)cGroup_10.eContents().get(0);
		private final Keyword cKKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Action cSimpleAction_11_0 = (Action)cGroup_11.eContents().get(0);
		private final Keyword cLKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Action cSimpleAction_12_0 = (Action)cGroup_12.eContents().get(0);
		private final Keyword cMKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Action cSimpleAction_13_0 = (Action)cGroup_13.eContents().get(0);
		private final Keyword cNKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Action cSimpleAction_14_0 = (Action)cGroup_14.eContents().get(0);
		private final Keyword cOKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Action cSimpleAction_15_0 = (Action)cGroup_15.eContents().get(0);
		private final Keyword cPKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Action cSimpleAction_16_0 = (Action)cGroup_16.eContents().get(0);
		private final Keyword cQKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Group cGroup_17 = (Group)cAlternatives.eContents().get(17);
		private final Action cSimpleAction_17_0 = (Action)cGroup_17.eContents().get(0);
		private final Keyword cRKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Action cSimpleAction_18_0 = (Action)cGroup_18.eContents().get(0);
		private final Keyword cSKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Group cGroup_19 = (Group)cAlternatives.eContents().get(19);
		private final Action cSimpleAction_19_0 = (Action)cGroup_19.eContents().get(0);
		private final Keyword cTKeyword_19_1 = (Keyword)cGroup_19.eContents().get(1);
		private final Group cGroup_20 = (Group)cAlternatives.eContents().get(20);
		private final Action cSimpleAction_20_0 = (Action)cGroup_20.eContents().get(0);
		private final Keyword cVKeyword_20_1 = (Keyword)cGroup_20.eContents().get(1);
		private final Group cGroup_21 = (Group)cAlternatives.eContents().get(21);
		private final Action cSimpleAction_21_0 = (Action)cGroup_21.eContents().get(0);
		private final Keyword cWKeyword_21_1 = (Keyword)cGroup_21.eContents().get(1);
		private final Group cGroup_22 = (Group)cAlternatives.eContents().get(22);
		private final Action cSimpleAction_22_0 = (Action)cGroup_22.eContents().get(0);
		private final Keyword cXKeyword_22_1 = (Keyword)cGroup_22.eContents().get(1);
		private final Group cGroup_23 = (Group)cAlternatives.eContents().get(23);
		private final Action cSimpleAction_23_0 = (Action)cGroup_23.eContents().get(0);
		private final Keyword cYKeyword_23_1 = (Keyword)cGroup_23.eContents().get(1);
		private final Group cGroup_24 = (Group)cAlternatives.eContents().get(24);
		private final Action cSimpleAction_24_0 = (Action)cGroup_24.eContents().get(0);
		private final Keyword cZKeyword_24_1 = (Keyword)cGroup_24.eContents().get(1);
		
		//Simple:
		//    alpha= 'a'|{Simple} 'b'|{Simple} 'c'|{Simple} 'd'|{Simple} 'e'|{Simple} 'f'|{Simple} 'g'|{Simple} 'h'|{Simple} 'i'|{Simple} 'j'|{Simple} 'k'|{Simple} 'l'|
		//    {Simple} 'm'|{Simple} 'n'|{Simple} 'o'|{Simple} 'p'|{Simple} 'q'|{Simple} 'r'|{Simple} 's'|{Simple} 't'|{Simple} 'v'|{Simple} 'w'|{Simple} 'x'|{Simple} 'y'|{Simple} 'z'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//alpha= 'a'|{Simple} 'b'|{Simple} 'c'|{Simple} 'd'|{Simple} 'e'|{Simple} 'f'|{Simple} 'g'|{Simple} 'h'|{Simple} 'i'|{Simple} 'j'|{Simple} 'k'|{Simple} 'l'|
		//{Simple} 'm'|{Simple} 'n'|{Simple} 'o'|{Simple} 'p'|{Simple} 'q'|{Simple} 'r'|{Simple} 's'|{Simple} 't'|{Simple} 'v'|{Simple} 'w'|{Simple} 'x'|{Simple} 'y'|{Simple} 'z'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//alpha= 'a'
		public Assignment getAlphaAssignment_0() { return cAlphaAssignment_0; }
		
		//'a'
		public Keyword getAlphaAKeyword_0_0() { return cAlphaAKeyword_0_0; }
		
		//{Simple} 'b'
		public Group getGroup_1() { return cGroup_1; }
		
		//{Simple}
		public Action getSimpleAction_1_0() { return cSimpleAction_1_0; }
		
		//'b'
		public Keyword getBKeyword_1_1() { return cBKeyword_1_1; }
		
		//{Simple} 'c'
		public Group getGroup_2() { return cGroup_2; }
		
		//{Simple}
		public Action getSimpleAction_2_0() { return cSimpleAction_2_0; }
		
		//'c'
		public Keyword getCKeyword_2_1() { return cCKeyword_2_1; }
		
		//{Simple} 'd'
		public Group getGroup_3() { return cGroup_3; }
		
		//{Simple}
		public Action getSimpleAction_3_0() { return cSimpleAction_3_0; }
		
		//'d'
		public Keyword getDKeyword_3_1() { return cDKeyword_3_1; }
		
		//{Simple} 'e'
		public Group getGroup_4() { return cGroup_4; }
		
		//{Simple}
		public Action getSimpleAction_4_0() { return cSimpleAction_4_0; }
		
		//'e'
		public Keyword getEKeyword_4_1() { return cEKeyword_4_1; }
		
		//{Simple} 'f'
		public Group getGroup_5() { return cGroup_5; }
		
		//{Simple}
		public Action getSimpleAction_5_0() { return cSimpleAction_5_0; }
		
		//'f'
		public Keyword getFKeyword_5_1() { return cFKeyword_5_1; }
		
		//{Simple} 'g'
		public Group getGroup_6() { return cGroup_6; }
		
		//{Simple}
		public Action getSimpleAction_6_0() { return cSimpleAction_6_0; }
		
		//'g'
		public Keyword getGKeyword_6_1() { return cGKeyword_6_1; }
		
		//{Simple} 'h'
		public Group getGroup_7() { return cGroup_7; }
		
		//{Simple}
		public Action getSimpleAction_7_0() { return cSimpleAction_7_0; }
		
		//'h'
		public Keyword getHKeyword_7_1() { return cHKeyword_7_1; }
		
		//{Simple} 'i'
		public Group getGroup_8() { return cGroup_8; }
		
		//{Simple}
		public Action getSimpleAction_8_0() { return cSimpleAction_8_0; }
		
		//'i'
		public Keyword getIKeyword_8_1() { return cIKeyword_8_1; }
		
		//{Simple} 'j'
		public Group getGroup_9() { return cGroup_9; }
		
		//{Simple}
		public Action getSimpleAction_9_0() { return cSimpleAction_9_0; }
		
		//'j'
		public Keyword getJKeyword_9_1() { return cJKeyword_9_1; }
		
		//{Simple} 'k'
		public Group getGroup_10() { return cGroup_10; }
		
		//{Simple}
		public Action getSimpleAction_10_0() { return cSimpleAction_10_0; }
		
		//'k'
		public Keyword getKKeyword_10_1() { return cKKeyword_10_1; }
		
		//{Simple} 'l'
		public Group getGroup_11() { return cGroup_11; }
		
		//{Simple}
		public Action getSimpleAction_11_0() { return cSimpleAction_11_0; }
		
		//'l'
		public Keyword getLKeyword_11_1() { return cLKeyword_11_1; }
		
		//{Simple} 'm'
		public Group getGroup_12() { return cGroup_12; }
		
		//{Simple}
		public Action getSimpleAction_12_0() { return cSimpleAction_12_0; }
		
		//'m'
		public Keyword getMKeyword_12_1() { return cMKeyword_12_1; }
		
		//{Simple} 'n'
		public Group getGroup_13() { return cGroup_13; }
		
		//{Simple}
		public Action getSimpleAction_13_0() { return cSimpleAction_13_0; }
		
		//'n'
		public Keyword getNKeyword_13_1() { return cNKeyword_13_1; }
		
		//{Simple} 'o'
		public Group getGroup_14() { return cGroup_14; }
		
		//{Simple}
		public Action getSimpleAction_14_0() { return cSimpleAction_14_0; }
		
		//'o'
		public Keyword getOKeyword_14_1() { return cOKeyword_14_1; }
		
		//{Simple} 'p'
		public Group getGroup_15() { return cGroup_15; }
		
		//{Simple}
		public Action getSimpleAction_15_0() { return cSimpleAction_15_0; }
		
		//'p'
		public Keyword getPKeyword_15_1() { return cPKeyword_15_1; }
		
		//{Simple} 'q'
		public Group getGroup_16() { return cGroup_16; }
		
		//{Simple}
		public Action getSimpleAction_16_0() { return cSimpleAction_16_0; }
		
		//'q'
		public Keyword getQKeyword_16_1() { return cQKeyword_16_1; }
		
		//{Simple} 'r'
		public Group getGroup_17() { return cGroup_17; }
		
		//{Simple}
		public Action getSimpleAction_17_0() { return cSimpleAction_17_0; }
		
		//'r'
		public Keyword getRKeyword_17_1() { return cRKeyword_17_1; }
		
		//{Simple} 's'
		public Group getGroup_18() { return cGroup_18; }
		
		//{Simple}
		public Action getSimpleAction_18_0() { return cSimpleAction_18_0; }
		
		//'s'
		public Keyword getSKeyword_18_1() { return cSKeyword_18_1; }
		
		//{Simple} 't'
		public Group getGroup_19() { return cGroup_19; }
		
		//{Simple}
		public Action getSimpleAction_19_0() { return cSimpleAction_19_0; }
		
		//'t'
		public Keyword getTKeyword_19_1() { return cTKeyword_19_1; }
		
		//{Simple} 'v'
		public Group getGroup_20() { return cGroup_20; }
		
		//{Simple}
		public Action getSimpleAction_20_0() { return cSimpleAction_20_0; }
		
		//'v'
		public Keyword getVKeyword_20_1() { return cVKeyword_20_1; }
		
		//{Simple} 'w'
		public Group getGroup_21() { return cGroup_21; }
		
		//{Simple}
		public Action getSimpleAction_21_0() { return cSimpleAction_21_0; }
		
		//'w'
		public Keyword getWKeyword_21_1() { return cWKeyword_21_1; }
		
		//{Simple} 'x'
		public Group getGroup_22() { return cGroup_22; }
		
		//{Simple}
		public Action getSimpleAction_22_0() { return cSimpleAction_22_0; }
		
		//'x'
		public Keyword getXKeyword_22_1() { return cXKeyword_22_1; }
		
		//{Simple} 'y'
		public Group getGroup_23() { return cGroup_23; }
		
		//{Simple}
		public Action getSimpleAction_23_0() { return cSimpleAction_23_0; }
		
		//'y'
		public Keyword getYKeyword_23_1() { return cYKeyword_23_1; }
		
		//{Simple} 'z'
		public Group getGroup_24() { return cGroup_24; }
		
		//{Simple}
		public Action getSimpleAction_24_0() { return cSimpleAction_24_0; }
		
		//'z'
		public Keyword getZKeyword_24_1() { return cZKeyword_24_1; }
	}
	public class NonTerminalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.cyk.mydsl.MyFNC.NonTerminal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cVarAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cVarAKeyword_0_0 = (Keyword)cVarAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cNonTerminalAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cBKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cNonTerminalAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cCKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cNonTerminalAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Keyword cDKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cNonTerminalAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cNonTerminalAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final Keyword cFKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Action cNonTerminalAction_6_0 = (Action)cGroup_6.eContents().get(0);
		private final Keyword cGKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Action cNonTerminalAction_7_0 = (Action)cGroup_7.eContents().get(0);
		private final Keyword cHKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Action cNonTerminalAction_8_0 = (Action)cGroup_8.eContents().get(0);
		private final Keyword cIKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Action cNonTerminalAction_9_0 = (Action)cGroup_9.eContents().get(0);
		private final Keyword cJKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Action cNonTerminalAction_10_0 = (Action)cGroup_10.eContents().get(0);
		private final Keyword cKKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Action cNonTerminalAction_11_0 = (Action)cGroup_11.eContents().get(0);
		private final Keyword cLKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Action cNonTerminalAction_12_0 = (Action)cGroup_12.eContents().get(0);
		private final Keyword cMKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Action cNonTerminalAction_13_0 = (Action)cGroup_13.eContents().get(0);
		private final Keyword cNKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Action cNonTerminalAction_14_0 = (Action)cGroup_14.eContents().get(0);
		private final Keyword cOKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Action cNonTerminalAction_15_0 = (Action)cGroup_15.eContents().get(0);
		private final Keyword cPKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Action cNonTerminalAction_16_0 = (Action)cGroup_16.eContents().get(0);
		private final Keyword cQKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Group cGroup_17 = (Group)cAlternatives.eContents().get(17);
		private final Action cNonTerminalAction_17_0 = (Action)cGroup_17.eContents().get(0);
		private final Keyword cRKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Action cNonTerminalAction_18_0 = (Action)cGroup_18.eContents().get(0);
		private final Keyword cTKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Group cGroup_19 = (Group)cAlternatives.eContents().get(19);
		private final Action cNonTerminalAction_19_0 = (Action)cGroup_19.eContents().get(0);
		private final Keyword cUKeyword_19_1 = (Keyword)cGroup_19.eContents().get(1);
		private final Group cGroup_20 = (Group)cAlternatives.eContents().get(20);
		private final Action cNonTerminalAction_20_0 = (Action)cGroup_20.eContents().get(0);
		private final Keyword cVKeyword_20_1 = (Keyword)cGroup_20.eContents().get(1);
		private final Group cGroup_21 = (Group)cAlternatives.eContents().get(21);
		private final Action cNonTerminalAction_21_0 = (Action)cGroup_21.eContents().get(0);
		private final Keyword cWKeyword_21_1 = (Keyword)cGroup_21.eContents().get(1);
		private final Group cGroup_22 = (Group)cAlternatives.eContents().get(22);
		private final Action cNonTerminalAction_22_0 = (Action)cGroup_22.eContents().get(0);
		private final Keyword cXKeyword_22_1 = (Keyword)cGroup_22.eContents().get(1);
		private final Group cGroup_23 = (Group)cAlternatives.eContents().get(23);
		private final Action cNonTerminalAction_23_0 = (Action)cGroup_23.eContents().get(0);
		private final Keyword cYKeyword_23_1 = (Keyword)cGroup_23.eContents().get(1);
		private final Group cGroup_24 = (Group)cAlternatives.eContents().get(24);
		private final Action cNonTerminalAction_24_0 = (Action)cGroup_24.eContents().get(0);
		private final Keyword cZKeyword_24_1 = (Keyword)cGroup_24.eContents().get(1);
		
		//NonTerminal:
		//    var= 'A'|{NonTerminal} 'B'|{NonTerminal} 'C'|{NonTerminal} 'D'|{NonTerminal} 'E'|{NonTerminal} 'F'|{NonTerminal} 'G'|{NonTerminal} 'H'|{NonTerminal} 'I'|{NonTerminal} 'J'|{NonTerminal} 'K'|{NonTerminal} 'L'|
		//    {NonTerminal} 'M'|{NonTerminal} 'N'|{NonTerminal} 'O'|{NonTerminal} 'P'|{NonTerminal} 'Q'|{NonTerminal} 'R'|{NonTerminal} 'T'|{NonTerminal} 'U'|{NonTerminal} 'V'|{NonTerminal} 'W'|{NonTerminal} 'X'|{NonTerminal} 'Y'|{NonTerminal} 'Z'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//var= 'A'|{NonTerminal} 'B'|{NonTerminal} 'C'|{NonTerminal} 'D'|{NonTerminal} 'E'|{NonTerminal} 'F'|{NonTerminal} 'G'|{NonTerminal} 'H'|{NonTerminal} 'I'|{NonTerminal} 'J'|{NonTerminal} 'K'|{NonTerminal} 'L'|
		//{NonTerminal} 'M'|{NonTerminal} 'N'|{NonTerminal} 'O'|{NonTerminal} 'P'|{NonTerminal} 'Q'|{NonTerminal} 'R'|{NonTerminal} 'T'|{NonTerminal} 'U'|{NonTerminal} 'V'|{NonTerminal} 'W'|{NonTerminal} 'X'|{NonTerminal} 'Y'|{NonTerminal} 'Z'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//var= 'A'
		public Assignment getVarAssignment_0() { return cVarAssignment_0; }
		
		//'A'
		public Keyword getVarAKeyword_0_0() { return cVarAKeyword_0_0; }
		
		//{NonTerminal} 'B'
		public Group getGroup_1() { return cGroup_1; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_1_0() { return cNonTerminalAction_1_0; }
		
		//'B'
		public Keyword getBKeyword_1_1() { return cBKeyword_1_1; }
		
		//{NonTerminal} 'C'
		public Group getGroup_2() { return cGroup_2; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_2_0() { return cNonTerminalAction_2_0; }
		
		//'C'
		public Keyword getCKeyword_2_1() { return cCKeyword_2_1; }
		
		//{NonTerminal} 'D'
		public Group getGroup_3() { return cGroup_3; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_3_0() { return cNonTerminalAction_3_0; }
		
		//'D'
		public Keyword getDKeyword_3_1() { return cDKeyword_3_1; }
		
		//{NonTerminal} 'E'
		public Group getGroup_4() { return cGroup_4; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_4_0() { return cNonTerminalAction_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_1() { return cEKeyword_4_1; }
		
		//{NonTerminal} 'F'
		public Group getGroup_5() { return cGroup_5; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_5_0() { return cNonTerminalAction_5_0; }
		
		//'F'
		public Keyword getFKeyword_5_1() { return cFKeyword_5_1; }
		
		//{NonTerminal} 'G'
		public Group getGroup_6() { return cGroup_6; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_6_0() { return cNonTerminalAction_6_0; }
		
		//'G'
		public Keyword getGKeyword_6_1() { return cGKeyword_6_1; }
		
		//{NonTerminal} 'H'
		public Group getGroup_7() { return cGroup_7; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_7_0() { return cNonTerminalAction_7_0; }
		
		//'H'
		public Keyword getHKeyword_7_1() { return cHKeyword_7_1; }
		
		//{NonTerminal} 'I'
		public Group getGroup_8() { return cGroup_8; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_8_0() { return cNonTerminalAction_8_0; }
		
		//'I'
		public Keyword getIKeyword_8_1() { return cIKeyword_8_1; }
		
		//{NonTerminal} 'J'
		public Group getGroup_9() { return cGroup_9; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_9_0() { return cNonTerminalAction_9_0; }
		
		//'J'
		public Keyword getJKeyword_9_1() { return cJKeyword_9_1; }
		
		//{NonTerminal} 'K'
		public Group getGroup_10() { return cGroup_10; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_10_0() { return cNonTerminalAction_10_0; }
		
		//'K'
		public Keyword getKKeyword_10_1() { return cKKeyword_10_1; }
		
		//{NonTerminal} 'L'
		public Group getGroup_11() { return cGroup_11; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_11_0() { return cNonTerminalAction_11_0; }
		
		//'L'
		public Keyword getLKeyword_11_1() { return cLKeyword_11_1; }
		
		//{NonTerminal} 'M'
		public Group getGroup_12() { return cGroup_12; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_12_0() { return cNonTerminalAction_12_0; }
		
		//'M'
		public Keyword getMKeyword_12_1() { return cMKeyword_12_1; }
		
		//{NonTerminal} 'N'
		public Group getGroup_13() { return cGroup_13; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_13_0() { return cNonTerminalAction_13_0; }
		
		//'N'
		public Keyword getNKeyword_13_1() { return cNKeyword_13_1; }
		
		//{NonTerminal} 'O'
		public Group getGroup_14() { return cGroup_14; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_14_0() { return cNonTerminalAction_14_0; }
		
		//'O'
		public Keyword getOKeyword_14_1() { return cOKeyword_14_1; }
		
		//{NonTerminal} 'P'
		public Group getGroup_15() { return cGroup_15; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_15_0() { return cNonTerminalAction_15_0; }
		
		//'P'
		public Keyword getPKeyword_15_1() { return cPKeyword_15_1; }
		
		//{NonTerminal} 'Q'
		public Group getGroup_16() { return cGroup_16; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_16_0() { return cNonTerminalAction_16_0; }
		
		//'Q'
		public Keyword getQKeyword_16_1() { return cQKeyword_16_1; }
		
		//{NonTerminal} 'R'
		public Group getGroup_17() { return cGroup_17; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_17_0() { return cNonTerminalAction_17_0; }
		
		//'R'
		public Keyword getRKeyword_17_1() { return cRKeyword_17_1; }
		
		//{NonTerminal} 'T'
		public Group getGroup_18() { return cGroup_18; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_18_0() { return cNonTerminalAction_18_0; }
		
		//'T'
		public Keyword getTKeyword_18_1() { return cTKeyword_18_1; }
		
		//{NonTerminal} 'U'
		public Group getGroup_19() { return cGroup_19; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_19_0() { return cNonTerminalAction_19_0; }
		
		//'U'
		public Keyword getUKeyword_19_1() { return cUKeyword_19_1; }
		
		//{NonTerminal} 'V'
		public Group getGroup_20() { return cGroup_20; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_20_0() { return cNonTerminalAction_20_0; }
		
		//'V'
		public Keyword getVKeyword_20_1() { return cVKeyword_20_1; }
		
		//{NonTerminal} 'W'
		public Group getGroup_21() { return cGroup_21; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_21_0() { return cNonTerminalAction_21_0; }
		
		//'W'
		public Keyword getWKeyword_21_1() { return cWKeyword_21_1; }
		
		//{NonTerminal} 'X'
		public Group getGroup_22() { return cGroup_22; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_22_0() { return cNonTerminalAction_22_0; }
		
		//'X'
		public Keyword getXKeyword_22_1() { return cXKeyword_22_1; }
		
		//{NonTerminal} 'Y'
		public Group getGroup_23() { return cGroup_23; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_23_0() { return cNonTerminalAction_23_0; }
		
		//'Y'
		public Keyword getYKeyword_23_1() { return cYKeyword_23_1; }
		
		//{NonTerminal} 'Z'
		public Group getGroup_24() { return cGroup_24; }
		
		//{NonTerminal}
		public Action getNonTerminalAction_24_0() { return cNonTerminalAction_24_0; }
		
		//'Z'
		public Keyword getZKeyword_24_1() { return cZKeyword_24_1; }
	}
	public class BinaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.cyk.mydsl.MyFNC.Binary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFirstAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cFirstNonTerminalParserRuleCall_0_0 = (RuleCall)cFirstAssignment_0.eContents().get(0);
		private final Assignment cSecondAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSecondNonTerminalParserRuleCall_1_0 = (RuleCall)cSecondAssignment_1.eContents().get(0);
		
		//Binary:
		//    first=NonTerminal second=NonTerminal
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//first=NonTerminal second=NonTerminal
		public Group getGroup() { return cGroup; }
		
		//first=NonTerminal
		public Assignment getFirstAssignment_0() { return cFirstAssignment_0; }
		
		//NonTerminal
		public RuleCall getFirstNonTerminalParserRuleCall_0_0() { return cFirstNonTerminalParserRuleCall_0_0; }
		
		//second=NonTerminal
		public Assignment getSecondAssignment_1() { return cSecondAssignment_1; }
		
		//NonTerminal
		public RuleCall getSecondNonTerminalParserRuleCall_1_0() { return cSecondNonTerminalParserRuleCall_1_0; }
	}
	public class InputStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.cyk.mydsl.MyFNC.InputString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInputAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInputSTRINGTerminalRuleCall_1_0 = (RuleCall)cInputAssignment_1.eContents().get(0);
		
		//InputString:
		//    'Input' input = STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Input' input = STRING
		public Group getGroup() { return cGroup; }
		
		//'Input'
		public Keyword getInputKeyword_0() { return cInputKeyword_0; }
		
		//input = STRING
		public Assignment getInputAssignment_1() { return cInputAssignment_1; }
		
		//STRING
		public RuleCall getInputSTRINGTerminalRuleCall_1_0() { return cInputSTRINGTerminalRuleCall_1_0; }
	}
	
	
	private final GNFCElements pGNFC;
	private final InitialElements pInitial;
	private final LambdaElements pLambda;
	private final ProductionElements pProduction;
	private final RigthElements pRigth;
	private final SimpleElements pSimple;
	private final NonTerminalElements pNonTerminal;
	private final BinaryElements pBinary;
	private final InputStringElements pInputString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyFNCGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGNFC = new GNFCElements();
		this.pInitial = new InitialElements();
		this.pLambda = new LambdaElements();
		this.pProduction = new ProductionElements();
		this.pRigth = new RigthElements();
		this.pSimple = new SimpleElements();
		this.pNonTerminal = new NonTerminalElements();
		this.pBinary = new BinaryElements();
		this.pInputString = new InputStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.cyk.mydsl.MyFNC".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//GNFC:
	//    init = Initial productions+=Production* final = InputString
	//;
	public GNFCElements getGNFCAccess() {
		return pGNFC;
	}
	
	public ParserRule getGNFCRule() {
		return getGNFCAccess().getRule();
	}
	
	//Initial:
	//    left= 'S' '->' rigth+=(Lambda)('|' + rigth+=Rigth)*;
	public InitialElements getInitialAccess() {
		return pInitial;
	}
	
	public ParserRule getInitialRule() {
		return getInitialAccess().getRule();
	}
	
	//Lambda:
	//    rigth= '_' | Rigth
	//;
	public LambdaElements getLambdaAccess() {
		return pLambda;
	}
	
	public ParserRule getLambdaRule() {
		return getLambdaAccess().getRule();
	}
	
	//Production:
	//    left=NonTerminal '->' rigth+=(Rigth)('|' + rigth+=Rigth)*
	//;
	public ProductionElements getProductionAccess() {
		return pProduction;
	}
	
	public ParserRule getProductionRule() {
		return getProductionAccess().getRule();
	}
	
	//Rigth:
	//    Simple | Binary
	//;
	public RigthElements getRigthAccess() {
		return pRigth;
	}
	
	public ParserRule getRigthRule() {
		return getRigthAccess().getRule();
	}
	
	//Simple:
	//    alpha= 'a'|{Simple} 'b'|{Simple} 'c'|{Simple} 'd'|{Simple} 'e'|{Simple} 'f'|{Simple} 'g'|{Simple} 'h'|{Simple} 'i'|{Simple} 'j'|{Simple} 'k'|{Simple} 'l'|
	//    {Simple} 'm'|{Simple} 'n'|{Simple} 'o'|{Simple} 'p'|{Simple} 'q'|{Simple} 'r'|{Simple} 's'|{Simple} 't'|{Simple} 'v'|{Simple} 'w'|{Simple} 'x'|{Simple} 'y'|{Simple} 'z'
	//;
	public SimpleElements getSimpleAccess() {
		return pSimple;
	}
	
	public ParserRule getSimpleRule() {
		return getSimpleAccess().getRule();
	}
	
	//NonTerminal:
	//    var= 'A'|{NonTerminal} 'B'|{NonTerminal} 'C'|{NonTerminal} 'D'|{NonTerminal} 'E'|{NonTerminal} 'F'|{NonTerminal} 'G'|{NonTerminal} 'H'|{NonTerminal} 'I'|{NonTerminal} 'J'|{NonTerminal} 'K'|{NonTerminal} 'L'|
	//    {NonTerminal} 'M'|{NonTerminal} 'N'|{NonTerminal} 'O'|{NonTerminal} 'P'|{NonTerminal} 'Q'|{NonTerminal} 'R'|{NonTerminal} 'T'|{NonTerminal} 'U'|{NonTerminal} 'V'|{NonTerminal} 'W'|{NonTerminal} 'X'|{NonTerminal} 'Y'|{NonTerminal} 'Z'
	//;
	public NonTerminalElements getNonTerminalAccess() {
		return pNonTerminal;
	}
	
	public ParserRule getNonTerminalRule() {
		return getNonTerminalAccess().getRule();
	}
	
	//Binary:
	//    first=NonTerminal second=NonTerminal
	//;
	public BinaryElements getBinaryAccess() {
		return pBinary;
	}
	
	public ParserRule getBinaryRule() {
		return getBinaryAccess().getRule();
	}
	
	//InputString:
	//    'Input' input = STRING
	//;
	public InputStringElements getInputStringAccess() {
		return pInputString;
	}
	
	public ParserRule getInputStringRule() {
		return getInputStringAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
